<?php 
class Database{
    private $connection; 
    
    

    //Establishing a connection to the database in the constructor
    public function __construct() {
        $host = "localhost";
        $user = "root";
        $password = ""; 
        $database = "airline"; 
        $this->connection = new mysqli($host, $user, $password, $database); 
        // print_r(this->$connection)
        if(this->connection->connect_error){
            die("Connection failed: " . mysqli_connect_error()); 
        }
    } 


    private function execQurey($sql_query, $query_type){
        if($query_type === "GET"){
            $query_result = mysqli_query($this->connection, $sql_query); 
            return mysqli_fetch_all($query_result, MYSQLI_ASSOC); 
        }
        elseif($query_type === "POST"){
            return mysqli($this->connection, $sql); 
        }
    }
    /*********** User Functionalities **************/
    /**
     * Sign in 
     * Sign up 
     * Add ticket
     * Remove ticket
     * edit ticket
     * Book seat
     * Pay
     */
    public function addUser(array $user_object){    // Sign up
        $username = $user_object["username"]; 
        $password = $user_object["password"]; 
        $email = $user_object["email"]; 

        $sql = "INSERT INTO USER VALUES('$username', '$password', '$email'); "; 
        return execQurey($sql, "POST"); 
    }

    public function getUserID($username, $password){
        $sql = "SELECT ID 
        FROM USER
        WHERE Username ='$username' 
        AND Password ='$password'; "; 

        return execQurey($sql, "GET"); 
    }
    public function getUserData(array $user_object, $isPassenger){  // Sign in 
        $username = $user_object["username"]; 
        $password = $user_object["password"]; 
        // if the user is a previous passenger get his informaiton
        $sql = ""; 
        if($isPassenger){
            $sql = "SELECT * FROM USER NATURAL JOIN PASSENGER
            WHERE Username = '$username'
            And Password = '$password'; "; 
        }
        else{
            $sql = "SELECT * FROM USER
            WHERE Username = '$username'
            And Password = '$password'; "; 
        }
        return execQurey($sql, "GET"); 
    }

    /************************ Search Flights ***********************/
    public function getFlightNumber(array $date, $destination, $departure){
        $sql="SELECT Flight_NO 
        FROM FLIGHT
        Where Date='$date'
        AND Destination='$destination'
        AND Departure='$departure';"; 

        return execQurey($sql, "GET"); 
    }
    public function getFlightsTo($destination){
        $sql="SELECT * 
        FROM FLIGHT 
        WHERE Destination='$destination'; "; 

        return execQurey($sql, "GET"); 
    }
    public function getFlightsFrom($departure){
        $sql="SELECT * 
        FROM FLIGHT 
        WHERE Departure='$departure'; "; 

        return execQurey($sql, "GET"); 
    }
    public function getFlightsOn($date){
        $sql="SELECT * 
        FROM FLIGHT 
        WHERE Date='$date'; "; 

        return execQurey($sql, "GET"); 
    }
    /************************************************************* */

    /************** Booking Tickets ****************************** */


    // this function will make a new ticket in the database. 
    // the ticket numbe will be sequinatialy that is automatically generated by the database
    // the wight of the ticket can be defined later 
    public function generateTicket(){

    }
    public function bookTicket(){}
    public function deleteTicket(){}
    public function changeTicket(){}
    public function selectSeat(){}
    public function makePayment($price, $card_no){
        $sql = "INSERT INTO `PAYMENT` 
        (`Payment_NO`, `Amount`, `Date`, `Time`, `Card_NO`) 
        VALUES (NULL, '$price', CURRENT_DATE(), CURRENT_TIME(), '$card_no');"; 

        return execQurey($sql, "POST"); 
    }

    /************************************************************* */



    /*********** Admin Functionalities **************/
    /**
     * Add ticket for passenger
     * Remove ticket for passenger
     * edit ticket for passenger 
     * Book seats for passanger
     * generate reposrt 
     * prompte waitlisted passenger
     */




}

$db = new DataBase(); 
// print_r($db::getFlightsTo("New York"))
?> 