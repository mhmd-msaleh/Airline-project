<?php 
class Database{
    private $connection; 
    
    

    //Establishing a connection to the database in the constructor
    public function __construct() {
        $host = "localhost";
        $user = "root";
        $password = ""; 
        $database = "airline"; 
        $this->connection = new mysqli($host, $user, $password, $database); 
        // print_r(this->$connection)
        if($this->connection->connect_error){
            die("Connection failed: " . mysqli_connect_error()); 
        }
    } 


    private function execQurey($sql_query, $query_type){
        if($query_type === "GET"){
            $query_result = mysqli_query($this->connection, $sql_query); 
            return mysqli_fetch_all($query_result, MYSQLI_ASSOC); 
        }
        elseif($query_type === "POST"){
            return mysqli_query($this->connection, $sql_query); 
        }
    }
    /*********** User Functionalities **************/
    /**
     * Sign in 
     * Sign up 
     * Add ticket
     * Remove ticket
     * edit ticket
     * Book seat
     * Pay
     */
    public function addUser($username, $password, $email){    // Sign up
        $hashed_password = md5($password); 
        $sql = "INSERT INTO USER (Username, Password, Email) VALUES ('$username', '$hashed_password', '$email'); "; 
        return $this->execQurey($sql, "POST"); 
    }

    public function getUserID($username, $password){
        $sql = "SELECT ID 
        FROM USER
        WHERE Username ='$username' 
        AND Password = MD5('$password'); "; 

        return $this->execQurey($sql, "GET"); 
    }

    public function getUserIDByUsername($username){
        $sql = "SELECT ID 
        FROM USER
        WHERE Username ='$username'; "; 

        return $this->execQurey($sql, "GET"); 
    }

    
    public function getUserData($id){  // Sign in 
        $sql = "SELECT * FROM PASSENGER
        WHERE User_id = '$id'; "; 
        return $this->execQurey($sql, "GET"); 
    }

    public function addPassenger($ssn, $name, $dob, $gender, $phone, $email){
        $sql = "INSERT INTO PASSENGER
        (SSN, Name, Dob, Gender, Phone, Email)
        VALUES ($ssn, $name, $dob, $gender, $phone, $email);  "; 
        return $this->execQurey($sql, "POST"); 
    }

    public function getFlights($date, $destination, $departure){
        // we use intersection to handle the case when a variable is null
        $conditions = array(); 
        if(!empty($date)) { $conditions[] = "Date = '$date'"; }
        if(!empty($destination)) { $conditions[] = "Destination = '$destination'"; }
        if(!empty($departure)) { $conditions[] = "Departure = '$departure'"; }
        $where = implode(' AND ', $conditions); 
        $sql = "SELECT Flight_NO, Destination, Departure, Date, Time FROM FLIGHT 
                WHERE " . $where; 
        return $this->execQurey($sql, "GET"); 
    }

    public function getAvailableSeats($flight_no, $class){
        $sql = "SELECT Seat_NO, Price
        FROM SEAT
        WHERE Flight_NO = $flight_no
        AND Status = 'available'
        AND Class = $class; "; 
        return $this->execQurey($sql, "GET"); 
    }

    public function getPriceSeat($seat_no){
        $sql = "SELECT Price FROM SEAT WHERE Seat_NO = $seat_no; "; 
        return $this->execQurey($sql, "GET"); 
    }
    /************************************************************* */

    /************** Booking Tickets ****************************** */


    // this function will make a new ticket in the database. 
    // the ticket numbe will be sequinatialy that is automatically generated by the database
    // the wight of the ticket can be defined later 
    
    /**
     * @return ticket_NO 
     */
    public function makeBooking($ssn, $payment_no, $seat_no, $flight_no){
        $sql = "INSERT INTO BOOKING VLAUES (null, $ssn, $payment_no, $seat_no, $flight_no); "; 
        $this->execQurey($sql, "POST");
        $sql = "SELECT FROM TICKET WHERE Flight_NO = $flight_no AND Seat_NO = $seat_no; "; 
        return $this->execQurey($sql, "GET"); 


    }

    public function makePayment($amount, $card_no){
        $sql = "INSERT INTO `PAYMENT` (`Amount`, `Card_NO`) 
        VALUES ('$amount', '$card_no');
        SELECT payment_NO FROM payment ORDER BY payment_NO DESC LIMIT 1;"; 
        return $this->execQurey($sql, "GET"); 
    }

    /************************************************************* */



    /*********** Admin Functionalities **************/
    /**
     * Add ticket for passenger
     * Remove ticket for passenger
     * edit ticket for passenger 
     * Book seats for passanger
     * generate reposrt 
     * prompte waitlisted passenger
     */



    /********* Report queries **************/

    public function getActiveFlight(){
        $sql = "SELECT * FROM FLIGHT WHERE Date = current_date and Time >= current_time;"; 
        return $this->execQurey($sql, "GET"); 
    }

    public function validateAdmin($id, $password){
        $sql = "SELECT * FROM ADMIN WHERE ID = $id AND Password = $password; "; 
        return $this->execQurey($sql, "GET"); 
    }

    




}

$db = new DataBase(); 
// print_r($db::getFlightsTo("New York"))
?> 